jackson-annotations-2.6.0.jar
jackson-core-2.6.0.jar
jackson-core-asl-1.9.12.jar
jackson-databind-2.6.0.jar
jackson-mapper-asl-1.9.12.jar
json-lib-2.4-jdk15.jar


<!-- 设置json转换消息转换器，并且设置supportedMediaTypes  否则抛出406 -->  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <!-- 设置响应支持的类型 -->  
                        <value>text/html;charset=UTF-8</value>  
                        <!-- 设置请求body支持的类型 -->  
                        <value>application/x-www-form-urlencoded</value>  
                        <value>application/json;charset=UTF-8</value>  
                    </list>  
                </property>  
            </bean>  




\jboss-4.2.3.GA\server\default\conf\xmdesc org.jboss.deployment.MainDeployer-xmbean.xml
最先加载的是后缀名为deployer目录下应用或者服务；
250:.rar,300:-ds.xml,400:.jar,500:.war,550:.jse,650:.ear,800:.bsh
<descriptors>
         <value value="250:.rar,300:-ds.xml,400:.jar,500:.war,550:.jse,650:.ear,800:.bsh"/>
</descriptors>
可以通过调整这个value来改变加载规则。


解决的方法也很简单： 
替换掉\server\default\deploy\jboss-spring-jdk5.deployer目录下的spring-2.0.7.jar为新的spring-2.5.6.jar即可。 
   注：我用的JBOSS版本是4.2.2GA.



需要注意的是：JBOSS在加载自带的核心JAR之后，将会优先加载下面的两个目录 
1、D:\jboss\server\default\lib 
2、D:\jboss\server\default\tmp\deploy 
其中1会在2之前加载，而目录2是发布某个WAR,EAR,EJB等应用之后生成的临时的jar,这些应用的所有JAR会生成诸如temp*.jar的形式。本文开头提到的错误也就是在目录1中存在一个spring.jar的包，优先于各个应用的spring.jar包。 





accepted
I just ran into this issue myself.

After upgrading a library in my application, I received the following error on a request:

Exception handling request to /path: java.lang.NoSuchMethodError: com.fasterxml.jackson.core.JsonParser.hasToken(Lcom/fasterxml/jackson/core/JsonToken;)
Here is how I solved it:

I obviously had to exclude jackson-core-2.5.1 that wildfly-9 provides.

I listed all modules that depend on 'jackson-core' with /opt/wildfly/modules# grep -R 'jackson-core'

Then I created a jboss-deployment-structure.xml in my WEB-INF folder:

<jboss-deployment-structure>
    <deployment>
        <exclusions>
            <module name="com.fasterxml.jackson.core.jackson-core" />
            <module name="com.fasterxml.jackson.core.jackson-databind" />
            <module name="com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider" />
            <module name="org.jboss.resteasy.resteasy-jackson2-provider" />
        </exclusions>
    </deployment>
</jboss-deployment-structure>
